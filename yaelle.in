#!/usr/bin/env python

import sys
import signal
import os
import locale
import gettext

# Make sure we'll find the pygobject module, even in JHBuild
sys.path.insert(1, '@pyexecdir@')
# Make sure we'll find the yaelle modules, even in JHBuild
sys.path.insert(1, '@pythondir@')

from gi.repository import Gio

localedir = '@localedir@'
pkgdatadir = '@pkgdatadir@'

from yaelle.application import Application

def install_excepthook():
    """ Make sure we exit when an unhandled exception occurs. """
    from gi.repository import Gtk
    old_hook = sys.excepthook

    def new_hook(etype, evalue, etb):
        old_hook(etype, evalue, etb)
        while Gtk.main_level():
            Gtk.main_quit()
        sys.exit()
    sys.excepthook = new_hook

if __name__ == "__main__":
    install_excepthook()

    locale.bindtextdomain('yaelle', localedir)
    locale.textdomain('yaelle')
    gettext.bindtextdomain('yaelle', localedir)
    gettext.textdomain('yaelle')

    resource = Gio.resource_load(os.path.join(pkgdatadir, 'yaelle.gresource'))
    Gio.Resource._register(resource)

    app = Application()
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    exit_status = app.run(sys.argv)
    sys.exit(exit_status)
